/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/public/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* no static exports found */
/* all exports used */
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(module, exports) {

eval("var $mineSweeper = $('#myMineSweeper');\nvar mines = 0;\nvar height = 0;\nvar width = 0;\nvar array = [];\nvar flagCounter = 0;\nvar timer = 1;\nvar startTimer;\nvar topTenScore = [];\nvar database = firebase.database();\n\nfunction AddHighScore(number, name) {\n    var hsKey = database.ref().child('highscore').push().key;\n    var highScore = { score: number, username: name };\n    var updates = {};\n    updates['/highscore/' + width + height + '/' + hsKey] = highScore;\n    return database.ref().update(updates);\n}\n\nfunction UpdateCounterText() {\n    var nextCounter = array.reduce((p, c) => p - c.filter(o => o.flag).length, mines);\n    $('#counterText').text(nextCounter);\n    flagCounter = nextCounter;\n};\n\nfunction StartGame() {\n    for (var i = 0; i < height; i++) {\n        array[i] = [];\n        for (var j = 0; j < width; j++) {\n            array[i][j] = {\n                number: 0,\n                open: false,\n                mine: false,\n                flag: false,\n                ask: false\n            };\n        }\n    }\n    for (var i = 0; i < mines; i++) {\n        AddRandomMine();\n    }\n\n    function AddRandomMine() {\n        var loop = true;\n        while (loop) {\n            var column = Math.floor(Math.random() * width);\n            var row = Math.floor(Math.random() * height);\n\n            if (!array[row][column].mine) {\n                array[row][column].mine = true;\n                loop = false;\n            }\n        }\n    };\n\n    AddNumbers();\n    function AddNumbers() {\n        for (var i = 0; i < array.length; i++) {\n            for (var j = 0; j < array[i].length; j++) {\n                if (!array[i][j].mine) {\n                    var surroundingCells = GetSurroundingMines(array, i, j);\n                    array[i][j].number = surroundingCells.length;\n                }\n            }\n        }\n    };\n\n    function GetSurroundingMines(array, i, j) {\n        var simonCells = [[i + 1, j], [i + 1, j + 1], [i + 1, j - 1], [i - 1, j], [i - 1, j - 1], [i - 1, j + 1], [i, j + 1], [i, j - 1]];\n\n        var validCells = simonCells.filter(function (cell) {\n            var i = cell[0];\n            var j = cell[1];\n            return i >= 0 && i < array.length && j >= 0 && j < array[0].length;\n        });\n        var realCells = validCells.map(function (cell) {\n            var i = cell[0];\n            var j = cell[1];\n            return array[i][j];\n        });\n        var numberOfMines = realCells.filter(function (array) {\n            return array.mine;\n        });\n        return numberOfMines;\n    };\n    //Reset counter and button picture\n    Reset();\n    render();\n    function render() {\n        $mineSweeper.empty();\n        for (var i = 0; i < array.length; i++) {\n            var $myRow = $('<div/>', { class: 'row' });\n            $mineSweeper.append($myRow);\n            for (var j = 0; j < array[i].length; j++) {\n                var selectedCell = array[i][j];\n                var text = selectedCell.mine ? ' ' : selectedCell.number > 0 ? selectedCell.number : ' ';\n                $myRow.append($('<button/>', {\n                    type: 'button', 'data-i': i, 'data-j': j,\n                    text: selectedCell.open ? text : ' ',\n                    class: selectedCell.open && selectedCell.mine ? 'openmineCell' : selectedCell.open ? 'opencell' : selectedCell.flag ? 'flagCell' : selectedCell.ask ? 'askCell' : 'cell'\n                }));\n            }\n        }\n    };\n\n    function OpenSurroundingCells(i, j) {\n        var surroundingCells = [[i + 1, j], [i + 1, j + 1], [i + 1, j - 1], [i - 1, j], [i - 1, j - 1], [i - 1, j + 1], [i, j + 1], [i, j - 1]];\n        var validCells = surroundingCells.filter(cell => {\n            var i = cell[0];\n            var j = cell[1];\n            return i >= 0 && i < array.length && j >= 0 && j < array[0].length;\n        });\n        var cellsForRecursion = validCells.filter(cell => {\n            i = cell[0];\n            j = cell[1];\n            return array[i][j].open == false && array[i][j].number == 0;\n        });\n        validCells.forEach(cell => {\n            i = cell[0];\n            j = cell[1];\n            array[i][j].open = true;\n            array[i][j].flag = false;\n            array[i][j].ask = false;\n        });\n        return cellsForRecursion;\n    };\n\n    function OpenSurroundingNonFlaggedCells(i, j) {\n        var surroundingCells = [[i + 1, j], [i + 1, j + 1], [i + 1, j - 1], [i - 1, j], [i - 1, j - 1], [i - 1, j + 1], [i, j + 1], [i, j - 1]];\n        var validCells = surroundingCells.filter(cell => {\n            let k = cell[0];\n            let l = cell[1];\n            return k >= 0 && k < array.length && l >= 0 && l < array[0].length;\n        });\n        var flagCells = validCells.filter(cell => {\n            let k = cell[0];\n            let l = cell[1];\n            return array[k][l].flag;\n        });\n        if (flagCells.length == array[i][j].number) {\n            validCells.forEach(cell => {\n                let k = cell[0];\n                let l = cell[1];\n                if (!array[k][l].flag) {\n                    if (array[k][l].mine) {\n                        array.forEach(r => r.forEach(cell => cell.open = true));\n                        $('.playAgain').attr('class', 'userLost');\n                        clearInterval(startTimer);\n                    };\n                    if (array[k][l].number == 0 && !array[k][l].mine) {\n                        ClickedOnZero(k, l);\n                    };\n                    array[k][l].open = true;\n                    array[k][l].flag = false;\n                    array[k][l].ask = false;\n                }\n            });\n        }\n        if (UserWon(i, j)) clearInterval(startTimer);\n        render();\n    };\n\n    $(document).on('dblclick', '.opencell', function (e) {\n        e.stopImmediatePropagation();\n        var $cell = $(this);\n        var i = $cell.data('i');\n        var j = $cell.data('j');\n        OpenSurroundingNonFlaggedCells(i, j);\n    });\n\n    $(document).on('contextmenu', '.flagCell, .cell, .askCell', function (event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        var $cell = $(this);\n        const setCellClass = n => $cell.attr('class', n);\n\n        var i = $cell.data('i');\n        var j = $cell.data('j');\n\n        switch ($cell.attr('class')) {\n            case 'cell':\n                if (flagCounter >= 1) {\n                    array[i][j].flag = true;\n                    setCellClass('flagCell');\n                    break;\n                } else {\n                    return;\n                }\n            case 'flagCell':\n                array[i][j].flag = false;\n                array[i][j].ask = true;\n                setCellClass('askCell');\n                break;\n            case 'askCell':\n                array[i][j].ask = false;\n                setCellClass('cell');\n                break;\n            default:\n                break;\n        };\n        UpdateCounterText();\n    });\n\n    $(document).on('click', '.cell', function (event) {\n        event.stopImmediatePropagation();\n        var $cell = $(this);\n        var i = $cell.data('i');\n        var j = $cell.data('j');\n\n        if (array[i][j].number != 0) {\n            array[i][j].open = true;\n        } else if (array[i][j].number == 0 && !array[i][j].mine) {\n            ClickedOnZero(i, j);\n        } else if (array[i][j].mine) {\n            array.forEach(r => r.forEach(cell => cell.open = true));\n            $('.playAgain').attr('class', 'userLost');\n            clearInterval(startTimer);\n        };\n\n        if (UserWon(i, j)) {\n            clearInterval(startTimer);\n        }\n\n        UpdateCounterText();\n        render();\n    });\n\n    function ClickedOnZero(i, j) {\n        array[i][j].open = true;\n        var allCellsToCheck = OpenSurroundingCells(i, j);\n        var loopingLength = allCellsToCheck;\n        for (var k = 0; k < loopingLength.length; k++) {\n            i = allCellsToCheck[k][0];\n            j = allCellsToCheck[k][1];\n            var returnedCells = OpenSurroundingCells(i, j);\n            if (returnedCells.length > 0) {\n                for (var l = 0; l < returnedCells.length; l++) {\n                    loopingLength.push(returnedCells[l]);\n                }\n            }\n        }\n    }\n\n    function UserWon(i, j) {\n        var closedCells = array.reduce((p, c) => c.filter(o => !o.open).length + p, 0);\n\n        if (closedCells == mines && array[i][j].mine == false) {\n            array[i][j].open = true;\n            $('.playAgain').attr('class', 'userWon');\n            array.forEach(r => r.forEach(cell => cell.open = true));\n            render();\n            AskForHighScoreSubmit();\n            return true;\n        } else return false;\n    }\n}\n\nfunction SetUpGame() {\n    height = $('#height').val();\n    height = parseInt(height);\n    width = $('#width').val();\n    width = parseInt(width);\n\n    if (height >= 2 && width >= 2 && height <= 50 && width <= 50) {\n        mines = Math.round(width * height / 8) + 1;\n        $('#size').toggle();\n        $('#game').toggle();\n        StartGame();\n    } else {\n        $('#chooseSize').html('<p style=\"color: red;\">Must be between 2 and 50<p/>');\n        return;\n    }\n}\n\nfunction AskForHighScoreSubmit() {\n    if (topTenScore.length >= 10) {\n        if (topTenScore[9].score > timer) {\n            if (confirm('Top ten! Submit highscore?')) {\n                var name = prompt('Choose name (max 10 characters)');\n                while (true) {\n                    if (name.length <= 10) {\n                        AddHighScore(timer, name);\n                        $('#hsBody').append($('<tr/>', { html: '<td>' + name + '</td><td class=\"scoreTd\">' + timer + '</td>' }));\n                        break;\n                    } else {\n                        name = prompt('Max 10 characters');\n                    }\n                }\n            }\n        } else {\n            alert('Too bad!');\n        }\n    } else {\n        if (confirm('Top ten! Submit highscore?')) {\n            var name = prompt('Choose name (max 10 characters)');\n            while (true) {\n                if (name.length <= 10) {\n                    AddHighScore(timer, name);\n                    $('#hsBody').append($('<tr/>', { html: '<td>' + name + '</td><td class=\"scoreTd\">' + timer + '</td>' }));\n                    break;\n                } else {\n                    name = prompt('Max 10 characters');\n                }\n            }\n        }\n    }\n}\n\nfunction Reset() {\n    UpdateCounterText();\n    $('#playAgain').attr('class', 'playAgain');\n    try {\n        clearInterval(startTimer);\n    } catch (error) {}\n    timer = 1;\n    $('#timer').text(timer);\n    $('#hsBody').empty();\n    $('#highScoreText').text('Lowscore ' + width + ' x ' + height);\n\n    startTimer = setInterval(() => {\n        timer++;$('#timer').text(timer);\n    }, 1000);\n    topTenScore = [];\n    database.ref('/highscore/' + width + height + '/').once('value').then(function (snapshot) {\n        let obj = snapshot.val();\n        for (var key in obj) {\n            topTenScore.push({ username: obj[key].username, score: obj[key].score });\n        }\n        topTenScore.sort((a, b) => a.score - b.score);\n        topTenScore.forEach(c => {\n            var newTr = $('<tr/>');\n            newTr.append($('<td/>', { text: c.username }));\n            newTr.append($('<td/>', { text: c.score, class: 'scoreTd' }));\n            $('#hsBody').append(newTr);\n        });\n    });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvaW5kZXguanM/MWZkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgJG1pbmVTd2VlcGVyID0gJCgnI215TWluZVN3ZWVwZXInKTtcbnZhciBtaW5lcyA9IDA7XG52YXIgaGVpZ2h0ID0gMDtcbnZhciB3aWR0aCA9IDA7XG52YXIgYXJyYXkgPSBbXTtcbnZhciBmbGFnQ291bnRlciA9IDA7XG52YXIgdGltZXIgPSAxO1xudmFyIHN0YXJ0VGltZXI7XG52YXIgdG9wVGVuU2NvcmUgPSBbXTtcbnZhciBkYXRhYmFzZSA9IGZpcmViYXNlLmRhdGFiYXNlKCk7XG5cblxuZnVuY3Rpb24gQWRkSGlnaFNjb3JlKG51bWJlciwgbmFtZSkge1xuICAgIHZhciBoc0tleSA9IGRhdGFiYXNlLnJlZigpLmNoaWxkKCdoaWdoc2NvcmUnKS5wdXNoKCkua2V5O1xuICAgIHZhciBoaWdoU2NvcmUgPSB7c2NvcmU6IG51bWJlciwgdXNlcm5hbWU6IG5hbWV9O1xuICAgIHZhciB1cGRhdGVzID0ge307XG4gICAgdXBkYXRlc1snL2hpZ2hzY29yZS8nICsgd2lkdGggKyBoZWlnaHQgKyAnLycgKyBoc0tleV0gPSBoaWdoU2NvcmU7XG4gICAgcmV0dXJuIGRhdGFiYXNlLnJlZigpLnVwZGF0ZSh1cGRhdGVzKVxufVxuXG5mdW5jdGlvbiBVcGRhdGVDb3VudGVyVGV4dCgpe1xuICAgIHZhciBuZXh0Q291bnRlciA9IGFycmF5XG4gICAgLnJlZHVjZSgocCwgYykgPT4gcCAtIGMuZmlsdGVyKG8gPT4gby5mbGFnKS5sZW5ndGgsIG1pbmVzKTtcbiAgICAkKCcjY291bnRlclRleHQnKS50ZXh0KG5leHRDb3VudGVyKVxuICAgIGZsYWdDb3VudGVyID0gbmV4dENvdW50ZXI7XG4gICAgXG59O1xuXG5mdW5jdGlvbiBTdGFydEdhbWUoKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBoZWlnaHQ7IGkrKykge1xuICAgICAgICBhcnJheVtpXSA9IFtdO1xuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHdpZHRoOyBqKyspIHtcbiAgICAgICAgICAgIGFycmF5W2ldW2pdID0ge1xuICAgICAgICAgICAgICAgIG51bWJlcjogMCxcbiAgICAgICAgICAgICAgICBvcGVuOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBtaW5lOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBmbGFnOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBhc2s6IGZhbHNlXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbWluZXM7IGkrKykge1xuICAgICAgICBBZGRSYW5kb21NaW5lKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gQWRkUmFuZG9tTWluZSgpIHtcbiAgICAgICAgdmFyIGxvb3AgPSB0cnVlO1xuICAgICAgICB3aGlsZSAobG9vcCkge1xuICAgICAgICAgICAgdmFyIGNvbHVtbiA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHdpZHRoKVxuICAgICAgICAgICAgdmFyIHJvdyA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGhlaWdodClcblxuICAgICAgICAgICAgaWYgKCFhcnJheVtyb3ddW2NvbHVtbl0ubWluZSkge1xuICAgICAgICAgICAgICAgIGFycmF5W3Jvd11bY29sdW1uXS5taW5lID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBsb29wID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgQWRkTnVtYmVycygpO1xuICAgIGZ1bmN0aW9uIEFkZE51bWJlcnMoKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgYXJyYXlbaV0ubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoIWFycmF5W2ldW2pdLm1pbmUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN1cnJvdW5kaW5nQ2VsbHMgPSBHZXRTdXJyb3VuZGluZ01pbmVzKGFycmF5LCBpLCBqKTtcbiAgICAgICAgICAgICAgICAgICAgYXJyYXlbaV1bal0ubnVtYmVyID0gc3Vycm91bmRpbmdDZWxscy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIEdldFN1cnJvdW5kaW5nTWluZXMoYXJyYXksIGksIGopIHtcbiAgICAgICAgdmFyIHNpbW9uQ2VsbHMgPSBbW2kgKyAxLCBqXSwgW2kgKyAxLCBqICsgMV0sIFtpICsgMSwgaiAtIDFdLCBbaSAtIDEsIGpdLCBbaSAtIDEsIGogLSAxXSwgW2kgLSAxLCBqICsgMV0sIFtpLCBqICsgMV0sIFtpLCBqIC0gMV1dO1xuXG4gICAgICAgIHZhciB2YWxpZENlbGxzID0gc2ltb25DZWxscy5maWx0ZXIoZnVuY3Rpb24gKGNlbGwpIHtcbiAgICAgICAgICAgIHZhciBpID0gY2VsbFswXVxuICAgICAgICAgICAgdmFyIGogPSBjZWxsWzFdXG4gICAgICAgICAgICByZXR1cm4gaSA+PSAwICYmIGkgPCBhcnJheS5sZW5ndGggJiYgaiA+PSAwICYmIGogPCBhcnJheVswXS5sZW5ndGhcbiAgICAgICAgfSlcbiAgICAgICAgdmFyIHJlYWxDZWxscyA9IHZhbGlkQ2VsbHMubWFwKGZ1bmN0aW9uIChjZWxsKSB7XG4gICAgICAgICAgICB2YXIgaSA9IGNlbGxbMF1cbiAgICAgICAgICAgIHZhciBqID0gY2VsbFsxXVxuICAgICAgICAgICAgcmV0dXJuIGFycmF5W2ldW2pdXG4gICAgICAgIH0pXG4gICAgICAgIHZhciBudW1iZXJPZk1pbmVzID0gcmVhbENlbGxzLmZpbHRlcihmdW5jdGlvbiAoYXJyYXkpIHtcbiAgICAgICAgICAgIHJldHVybiBhcnJheS5taW5lO1xuICAgICAgICB9KVxuICAgICAgICByZXR1cm4gbnVtYmVyT2ZNaW5lcztcbiAgICB9O1xuICAgIC8vUmVzZXQgY291bnRlciBhbmQgYnV0dG9uIHBpY3R1cmVcbiAgICBSZXNldCgpO1xuICAgIHJlbmRlcigpO1xuICAgIGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgJG1pbmVTd2VlcGVyLmVtcHR5KCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciAkbXlSb3cgPSAkKCc8ZGl2Lz4nLCB7IGNsYXNzOiAncm93JyB9KVxuICAgICAgICAgICAgJG1pbmVTd2VlcGVyLmFwcGVuZCgkbXlSb3cpXG4gICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGFycmF5W2ldLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNlbGVjdGVkQ2VsbCA9IGFycmF5W2ldW2pdXG4gICAgICAgICAgICAgICAgdmFyIHRleHQgPSBzZWxlY3RlZENlbGwubWluZSA/ICcgJyA6IHNlbGVjdGVkQ2VsbC5udW1iZXIgPiAwID8gc2VsZWN0ZWRDZWxsLm51bWJlciA6ICcgJztcbiAgICAgICAgICAgICAgICAkbXlSb3cuYXBwZW5kKCQoJzxidXR0b24vPicsIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2J1dHRvbicsICdkYXRhLWknOiBpLCAnZGF0YS1qJzogaixcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogc2VsZWN0ZWRDZWxsLm9wZW4gPyB0ZXh0IDogJyAnLFxuICAgICAgICAgICAgICAgICAgICBjbGFzczogc2VsZWN0ZWRDZWxsLm9wZW4gJiYgc2VsZWN0ZWRDZWxsLm1pbmUgPyAnb3Blbm1pbmVDZWxsJyA6IHNlbGVjdGVkQ2VsbC5vcGVuID8gJ29wZW5jZWxsJyA6IHNlbGVjdGVkQ2VsbC5mbGFnID8gJ2ZsYWdDZWxsJyA6IHNlbGVjdGVkQ2VsbC5hc2sgPyAnYXNrQ2VsbCcgOiAnY2VsbCdcbiAgICAgICAgICAgICAgICB9KSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBmdW5jdGlvbiBPcGVuU3Vycm91bmRpbmdDZWxscyhpLCBqKSB7XG4gICAgICAgIHZhciBzdXJyb3VuZGluZ0NlbGxzID0gW1tpICsgMSwgal0sIFtpICsgMSwgaiArIDFdLCBbaSArIDEsIGogLSAxXSwgW2kgLSAxLCBqXSwgW2kgLSAxLCBqIC0gMV0sIFtpIC0gMSwgaiArIDFdLCBbaSwgaiArIDFdLCBbaSwgaiAtIDFdXTtcbiAgICAgICAgdmFyIHZhbGlkQ2VsbHMgPSBzdXJyb3VuZGluZ0NlbGxzLmZpbHRlcigoY2VsbCkgPT4ge1xuICAgICAgICAgICAgdmFyIGkgPSBjZWxsWzBdXG4gICAgICAgICAgICB2YXIgaiA9IGNlbGxbMV1cbiAgICAgICAgICAgIHJldHVybiBpID49IDAgJiYgaSA8IGFycmF5Lmxlbmd0aCAmJiBqID49IDAgJiYgaiA8IGFycmF5WzBdLmxlbmd0aFxuICAgICAgICB9KTtcbiAgICAgICAgdmFyIGNlbGxzRm9yUmVjdXJzaW9uID0gdmFsaWRDZWxscy5maWx0ZXIoKGNlbGwpID0+IHtcbiAgICAgICAgICAgIGkgPSBjZWxsWzBdXG4gICAgICAgICAgICBqID0gY2VsbFsxXVxuICAgICAgICAgICAgcmV0dXJuIGFycmF5W2ldW2pdLm9wZW4gPT0gZmFsc2UgJiYgYXJyYXlbaV1bal0ubnVtYmVyID09IDA7XG4gICAgICAgIH0pO1xuICAgICAgICB2YWxpZENlbGxzLmZvckVhY2goKGNlbGwpID0+IHtcbiAgICAgICAgICAgIGkgPSBjZWxsWzBdXG4gICAgICAgICAgICBqID0gY2VsbFsxXVxuICAgICAgICAgICAgYXJyYXlbaV1bal0ub3BlbiA9IHRydWU7XG4gICAgICAgICAgICBhcnJheVtpXVtqXS5mbGFnID0gZmFsc2U7XG4gICAgICAgICAgICBhcnJheVtpXVtqXS5hc2sgPSBmYWxzZTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBjZWxsc0ZvclJlY3Vyc2lvbjtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gT3BlblN1cnJvdW5kaW5nTm9uRmxhZ2dlZENlbGxzKGksIGopIHtcbiAgICAgICAgdmFyIHN1cnJvdW5kaW5nQ2VsbHMgPSBbW2kgKyAxLCBqXSwgW2kgKyAxLCBqICsgMV0sIFtpICsgMSwgaiAtIDFdLCBbaSAtIDEsIGpdLCBbaSAtIDEsIGogLSAxXSwgW2kgLSAxLCBqICsgMV0sIFtpLCBqICsgMV0sIFtpLCBqIC0gMV1dO1xuICAgICAgICB2YXIgdmFsaWRDZWxscyA9IHN1cnJvdW5kaW5nQ2VsbHMuZmlsdGVyKChjZWxsKSA9PiB7XG4gICAgICAgICAgICBsZXQgayA9IGNlbGxbMF1cbiAgICAgICAgICAgIGxldCBsID0gY2VsbFsxXVxuICAgICAgICAgICAgcmV0dXJuIGsgPj0gMCAmJiBrIDwgYXJyYXkubGVuZ3RoICYmIGwgPj0gMCAmJiBsIDwgYXJyYXlbMF0ubGVuZ3RoXG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgZmxhZ0NlbGxzID0gdmFsaWRDZWxscy5maWx0ZXIoKGNlbGwpID0+IHtcbiAgICAgICAgICAgIGxldCBrID0gY2VsbFswXVxuICAgICAgICAgICAgbGV0IGwgPSBjZWxsWzFdXG4gICAgICAgICAgICByZXR1cm4gYXJyYXlba11bbF0uZmxhZ1xuICAgICAgICB9KTtcbiAgICAgICAgaWYoZmxhZ0NlbGxzLmxlbmd0aCA9PSBhcnJheVtpXVtqXS5udW1iZXIpe1xuICAgICAgICAgICAgdmFsaWRDZWxscy5mb3JFYWNoKChjZWxsKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IGsgPSBjZWxsWzBdO1xuICAgICAgICAgICAgICAgIGxldCBsID0gY2VsbFsxXTtcbiAgICAgICAgICAgICAgICBpZighYXJyYXlba11bbF0uZmxhZyl7XG4gICAgICAgICAgICAgICAgICAgIGlmIChhcnJheVtrXVtsXS5taW5lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhcnJheS5mb3JFYWNoKHIgPT4gci5mb3JFYWNoKGNlbGwgPT4gY2VsbC5vcGVuID0gdHJ1ZSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJCgnLnBsYXlBZ2FpbicpLmF0dHIoJ2NsYXNzJywgJ3VzZXJMb3N0JylcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoc3RhcnRUaW1lcik7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIGlmIChhcnJheVtrXVtsXS5udW1iZXIgPT0gMCAmJiAhYXJyYXlba11bbF0ubWluZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgQ2xpY2tlZE9uWmVybyhrLCBsKTtcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgYXJyYXlba11bbF0ub3BlbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGFycmF5W2tdW2xdLmZsYWcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgYXJyYXlba11bbF0uYXNrID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICBpZihVc2VyV29uKGksIGopKVxuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChzdGFydFRpbWVyKTtcbiAgICAgICAgcmVuZGVyKCk7XG4gICAgfTtcblxuICAgICQoZG9jdW1lbnQpLm9uKCdkYmxjbGljaycsICcub3BlbmNlbGwnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgICB2YXIgJGNlbGwgPSAkKHRoaXMpO1xuICAgICAgICB2YXIgaSA9ICRjZWxsLmRhdGEoJ2knKTtcbiAgICAgICAgdmFyIGogPSAkY2VsbC5kYXRhKCdqJyk7XG4gICAgICAgIE9wZW5TdXJyb3VuZGluZ05vbkZsYWdnZWRDZWxscyhpLCBqKTtcbiAgICB9KTtcblxuICAgICQoZG9jdW1lbnQpLm9uKCdjb250ZXh0bWVudScsICcuZmxhZ0NlbGwsIC5jZWxsLCAuYXNrQ2VsbCcsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbiAgICAgICAgdmFyICRjZWxsID0gJCh0aGlzKTtcbiAgICAgICAgY29uc3Qgc2V0Q2VsbENsYXNzID0gKG4pID0+ICRjZWxsLmF0dHIoJ2NsYXNzJywgbik7XG5cbiAgICAgICAgdmFyIGkgPSAkY2VsbC5kYXRhKCdpJyk7XG4gICAgICAgIHZhciBqID0gJGNlbGwuZGF0YSgnaicpO1xuICAgICAgICBcbiAgICAgICAgc3dpdGNoKCRjZWxsLmF0dHIoJ2NsYXNzJykpe1xuICAgICAgICAgICAgY2FzZSAnY2VsbCc6XG4gICAgICAgICAgICAgICAgaWYoZmxhZ0NvdW50ZXIgPj0gMSl7XG4gICAgICAgICAgICAgICAgICAgIGFycmF5W2ldW2pdLmZsYWcgPSB0cnVlOyAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgc2V0Q2VsbENsYXNzKCdmbGFnQ2VsbCcpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ2ZsYWdDZWxsJzpcbiAgICAgICAgICAgICAgICBhcnJheVtpXVtqXS5mbGFnID0gZmFsc2U7ICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgYXJyYXlbaV1bal0uYXNrID0gdHJ1ZTsgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgc2V0Q2VsbENsYXNzKCdhc2tDZWxsJylcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2Fza0NlbGwnOlxuICAgICAgICAgICAgICAgIGFycmF5W2ldW2pdLmFzayA9IGZhbHNlOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgc2V0Q2VsbENsYXNzKCdjZWxsJylcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH07XG4gICAgICAgIFVwZGF0ZUNvdW50ZXJUZXh0KCk7ICAgICAgICAgIFxuICAgIH0pXG5cbiAgICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAnLmNlbGwnLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICAgIHZhciAkY2VsbCA9ICQodGhpcylcbiAgICAgICAgdmFyIGkgPSAkY2VsbC5kYXRhKCdpJyk7XG4gICAgICAgIHZhciBqID0gJGNlbGwuZGF0YSgnaicpO1xuXG4gICAgICAgIGlmIChhcnJheVtpXVtqXS5udW1iZXIgIT0gMCkge1xuICAgICAgICAgICAgYXJyYXlbaV1bal0ub3BlbiA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYXJyYXlbaV1bal0ubnVtYmVyID09IDAgJiYgIWFycmF5W2ldW2pdLm1pbmUpIHtcbiAgICAgICAgICAgIENsaWNrZWRPblplcm8oaSwgaik7XG4gICAgICAgIH1cblxuICAgICAgICBlbHNlIGlmIChhcnJheVtpXVtqXS5taW5lKSB7XG4gICAgICAgICAgICBhcnJheS5mb3JFYWNoKHIgPT4gci5mb3JFYWNoKGNlbGwgPT4gY2VsbC5vcGVuID0gdHJ1ZSkpO1xuICAgICAgICAgICAgJCgnLnBsYXlBZ2FpbicpLmF0dHIoJ2NsYXNzJywgJ3VzZXJMb3N0JylcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoc3RhcnRUaW1lcik7XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYoVXNlcldvbihpLCBqKSl7XG4gICAgICAgICAgICBjbGVhckludGVydmFsKHN0YXJ0VGltZXIpO1xuICAgICAgICB9XG4gICAgICAgXG4gICAgICAgIFVwZGF0ZUNvdW50ZXJUZXh0KCk7XG4gICAgICAgIHJlbmRlcigpO1xuICAgIH0pXG5cbiAgICBmdW5jdGlvbiBDbGlja2VkT25aZXJvKGksIGopIHtcbiAgICAgICAgYXJyYXlbaV1bal0ub3BlbiA9IHRydWU7XG4gICAgICAgICAgICB2YXIgYWxsQ2VsbHNUb0NoZWNrID0gT3BlblN1cnJvdW5kaW5nQ2VsbHMoaSwgaik7XG4gICAgICAgICAgICB2YXIgbG9vcGluZ0xlbmd0aCA9IGFsbENlbGxzVG9DaGVjaztcbiAgICAgICAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgbG9vcGluZ0xlbmd0aC5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgICAgIGkgPSBhbGxDZWxsc1RvQ2hlY2tba11bMF07XG4gICAgICAgICAgICAgICAgaiA9IGFsbENlbGxzVG9DaGVja1trXVsxXTtcbiAgICAgICAgICAgICAgICB2YXIgcmV0dXJuZWRDZWxscyA9IE9wZW5TdXJyb3VuZGluZ0NlbGxzKGksIGopO1xuICAgICAgICAgICAgICAgIGlmIChyZXR1cm5lZENlbGxzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgbCA9IDA7IGwgPCByZXR1cm5lZENlbGxzLmxlbmd0aDsgbCsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb29waW5nTGVuZ3RoLnB1c2gocmV0dXJuZWRDZWxsc1tsXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gVXNlcldvbihpLCBqKSB7XG4gICAgICAgIHZhciBjbG9zZWRDZWxscyA9IGFycmF5XG4gICAgICAgIC5yZWR1Y2UoKHAsIGMpID0+IGMuZmlsdGVyKG8gPT4gIW8ub3BlbikubGVuZ3RoICsgcCwgMCk7XG4gICAgICAgIFxuICAgICAgICBpZiAoY2xvc2VkQ2VsbHMgPT0gbWluZXMgJiYgYXJyYXlbaV1bal0ubWluZSA9PSBmYWxzZSkge1xuICAgICAgICAgICAgYXJyYXlbaV1bal0ub3BlbiA9IHRydWU7XG4gICAgICAgICAgICAkKCcucGxheUFnYWluJykuYXR0cignY2xhc3MnLCAndXNlcldvbicpXG4gICAgICAgICAgICBhcnJheS5mb3JFYWNoKHIgPT4gci5mb3JFYWNoKGNlbGwgPT4gY2VsbC5vcGVuID0gdHJ1ZSkpO1xuICAgICAgICAgICAgcmVuZGVyKCk7XG4gICAgICAgICAgICBBc2tGb3JIaWdoU2NvcmVTdWJtaXQoKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIFNldFVwR2FtZSgpe1xuICAgIGhlaWdodCA9ICQoJyNoZWlnaHQnKS52YWwoKTtcbiAgICBoZWlnaHQgPSBwYXJzZUludChoZWlnaHQpO1xuICAgIHdpZHRoID0gJCgnI3dpZHRoJykudmFsKCk7XG4gICAgd2lkdGggPSBwYXJzZUludCh3aWR0aCk7XG4gICAgXG4gICAgaWYoaGVpZ2h0ID49IDIgJiYgd2lkdGggPj0gMiAmJiBoZWlnaHQgPD0gNTAgJiYgd2lkdGggPD0gNTApe1xuICAgICAgICBtaW5lcyA9IE1hdGgucm91bmQoKHdpZHRoICogaGVpZ2h0KSAvIDgpICsgMTtcbiAgICAgICAgJCgnI3NpemUnKS50b2dnbGUoKTtcbiAgICAgICAgJCgnI2dhbWUnKS50b2dnbGUoKTtcbiAgICAgICAgU3RhcnRHYW1lKCk7XG4gICAgfVxuICAgIGVsc2V7XG4gICAgICAgICQoJyNjaG9vc2VTaXplJykuaHRtbCgnPHAgc3R5bGU9XCJjb2xvcjogcmVkO1wiPk11c3QgYmUgYmV0d2VlbiAyIGFuZCA1MDxwLz4nKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gQXNrRm9ySGlnaFNjb3JlU3VibWl0KCkge1xuICAgIGlmKHRvcFRlblNjb3JlLmxlbmd0aCA+PSAxMCl7XG4gICAgICAgIGlmKHRvcFRlblNjb3JlWzldLnNjb3JlID4gdGltZXIpe1xuICAgICAgICAgICAgICAgIGlmKGNvbmZpcm0oJ1RvcCB0ZW4hIFN1Ym1pdCBoaWdoc2NvcmU/Jykpe1xuICAgICAgICAgICAgICAgICAgICB2YXIgbmFtZSA9IHByb21wdCgnQ2hvb3NlIG5hbWUgKG1heCAxMCBjaGFyYWN0ZXJzKScpXG4gICAgICAgICAgICAgICAgICAgIHdoaWxlKHRydWUpe1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYobmFtZS5sZW5ndGggPD0gMTApe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFkZEhpZ2hTY29yZSh0aW1lciwgbmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2hzQm9keScpLmFwcGVuZCgkKCc8dHIvPicsIHtodG1sOiAnPHRkPicgKyBuYW1lICsgJzwvdGQ+PHRkIGNsYXNzPVwic2NvcmVUZFwiPicgKyB0aW1lciArICc8L3RkPid9KSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lID0gcHJvbXB0KCdNYXggMTAgY2hhcmFjdGVycycpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgICBhbGVydCgnVG9vIGJhZCEnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNle1xuICAgICAgICBpZihjb25maXJtKCdUb3AgdGVuISBTdWJtaXQgaGlnaHNjb3JlPycpKXtcbiAgICAgICAgICAgIHZhciBuYW1lID0gcHJvbXB0KCdDaG9vc2UgbmFtZSAobWF4IDEwIGNoYXJhY3RlcnMpJylcbiAgICAgICAgICAgIHdoaWxlKHRydWUpe1xuICAgICAgICAgICAgICAgIGlmKG5hbWUubGVuZ3RoIDw9IDEwKXtcbiAgICAgICAgICAgICAgICAgICAgQWRkSGlnaFNjb3JlKHRpbWVyLCBuYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgJCgnI2hzQm9keScpLmFwcGVuZCgkKCc8dHIvPicsIHtodG1sOiAnPHRkPicgKyBuYW1lICsgJzwvdGQ+PHRkIGNsYXNzPVwic2NvcmVUZFwiPicgKyB0aW1lciArICc8L3RkPid9KSlcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgICAgIG5hbWUgPSBwcm9tcHQoJ01heCAxMCBjaGFyYWN0ZXJzJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5mdW5jdGlvbiBSZXNldCgpIHtcbiAgICBVcGRhdGVDb3VudGVyVGV4dCgpXG4gICAgJCgnI3BsYXlBZ2FpbicpLmF0dHIoJ2NsYXNzJywgJ3BsYXlBZ2FpbicpXG4gICAgdHJ5IHtjbGVhckludGVydmFsKHN0YXJ0VGltZXIpO30gY2F0Y2ggKGVycm9yKSB7fVxuICAgIHRpbWVyID0gMTtcbiAgICAkKCcjdGltZXInKS50ZXh0KHRpbWVyKTtcbiAgICAkKCcjaHNCb2R5JykuZW1wdHkoKTtcbiAgICAkKCcjaGlnaFNjb3JlVGV4dCcpLnRleHQoJ0xvd3Njb3JlICcgKyB3aWR0aCArICcgeCAnICsgaGVpZ2h0KTtcblxuICAgIHN0YXJ0VGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7dGltZXIrKzsgJCgnI3RpbWVyJykudGV4dCh0aW1lcil9LCAxMDAwKTtcbiAgICB0b3BUZW5TY29yZSA9IFtdXG4gICAgZGF0YWJhc2UucmVmKCcvaGlnaHNjb3JlLycgKyB3aWR0aCArIGhlaWdodCArICcvJykub25jZSgndmFsdWUnKS50aGVuKGZ1bmN0aW9uKHNuYXBzaG90KSB7XG4gICAgICAgIGxldCBvYmogPSBzbmFwc2hvdC52YWwoKVxuICAgICAgICBmb3IodmFyIGtleSBpbiBvYmope1xuICAgICAgICAgICAgdG9wVGVuU2NvcmUucHVzaCh7dXNlcm5hbWU6IG9ialtrZXldLnVzZXJuYW1lLCBzY29yZTogb2JqW2tleV0uc2NvcmV9KTtcbiAgICAgICAgfVxuICAgICAgICB0b3BUZW5TY29yZS5zb3J0KChhLCBiKSA9PiBhLnNjb3JlIC0gYi5zY29yZSk7XG4gICAgICAgIHRvcFRlblNjb3JlLmZvckVhY2goYyA9PiB7XG4gICAgICAgICAgICB2YXIgbmV3VHIgPSAkKCc8dHIvPicpO1xuICAgICAgICAgICAgbmV3VHIuYXBwZW5kKCQoJzx0ZC8+Jywge3RleHQ6IGMudXNlcm5hbWV9KSlcbiAgICAgICAgICAgIG5ld1RyLmFwcGVuZCgkKCc8dGQvPicsIHt0ZXh0OiBjLnNjb3JlLCBjbGFzczogJ3Njb3JlVGQnfSkpXG4gICAgICAgICAgICAkKCcjaHNCb2R5JykuYXBwZW5kKG5ld1RyKVxuICAgICAgICB9KVxuICAgIH0pO1xufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvaW5kZXguanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFMQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBcEJBO0FBc0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ })
/******/ ]);