/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/public/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* no static exports found */
/* all exports used */
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(module, exports) {

eval("var $mineSweeper = $('#myMineSweeper');\nvar mines = 0;\nvar height = 0;\nvar width = 0;\nvar array = [];\nvar flagCounter = 0;\n\nfunction UpdateCounterText() {\n    var nextCounter = array.reduce((p, c) => {\n        let counter = 0;\n        c.forEach(o => o.flag ? counter++ : o);\n        return p - counter;\n    }, mines);\n    $('#counterText').text(nextCounter);\n    flagCounter = nextCounter;\n};\n\nfunction StartGame() {\n    for (var i = 0; i < height; i++) {\n        array[i] = [];\n        for (var j = 0; j < width; j++) {\n            array[i][j] = {\n                number: 0,\n                open: false,\n                mine: false,\n                flag: false,\n                ask: false\n            };\n        }\n    }\n    for (var i = 0; i < mines; i++) {\n        AddRandomMine();\n    }\n\n    function AddRandomMine() {\n        var loop = true;\n        while (loop) {\n            var column = Math.floor(Math.random() * width);\n            var row = Math.floor(Math.random() * height);\n\n            if (!array[row][column].mine) {\n                array[row][column].mine = true;\n                loop = false;\n            }\n        }\n    };\n\n    AddNumbers();\n    function AddNumbers() {\n        for (var i = 0; i < array.length; i++) {\n            for (var j = 0; j < array[i].length; j++) {\n                if (!array[i][j].mine) {\n                    var surroundingCells = GetSurroundingMines(array, i, j);\n                    array[i][j].number = surroundingCells.length;\n                }\n            }\n        }\n    };\n\n    GetSurroundingMines(array, 0, 0);\n    function GetSurroundingMines(array, i, j) {\n        var simonCells = [[i + 1, j], [i + 1, j + 1], [i + 1, j - 1], [i - 1, j], [i - 1, j - 1], [i - 1, j + 1], [i, j + 1], [i, j - 1]];\n\n        var validCells = simonCells.filter(function (cell) {\n            var i = cell[0];\n            var j = cell[1];\n            return i >= 0 && i < array.length && j >= 0 && j < array[0].length;\n        });\n        var realCells = validCells.map(function (cell) {\n            var i = cell[0];\n            var j = cell[1];\n            return array[i][j];\n        });\n        var numberOfMines = realCells.filter(function (array) {\n            return array.mine;\n        });\n\n        return numberOfMines;\n    };\n    //Reset counter and button picture\n    UpdateCounterText();\n    $('#playAgain').attr('class', 'playAgain');\n\n    render();\n    function render() {\n        $mineSweeper.empty();\n        for (var i = 0; i < array.length; i++) {\n            var $myRow = $('<div/>', { class: 'row' });\n            $mineSweeper.append($myRow);\n            for (var j = 0; j < array[i].length; j++) {\n                var selectedCell = array[i][j];\n                var text = selectedCell.mine ? ' ' : selectedCell.number > 0 ? selectedCell.number : ' ';\n                $myRow.append($('<button/>', {\n                    type: 'button', 'data-i': i, 'data-j': j,\n                    text: selectedCell.open ? text : ' ',\n                    class: selectedCell.open && selectedCell.mine ? 'openmineCell' : selectedCell.open ? 'opencell' : selectedCell.flag ? 'flagCell' : selectedCell.ask ? 'askCell' : 'cell'\n                }));\n            }\n        }\n    };\n\n    function OpenSurroundingCells(array, i, j) {\n        var simonCells = [[i + 1, j], [i + 1, j + 1], [i + 1, j - 1], [i - 1, j], [i - 1, j - 1], [i - 1, j + 1], [i, j + 1], [i, j - 1]];\n        var validCells = simonCells.filter(function (cell) {\n            var i = cell[0];\n            var j = cell[1];\n            return i >= 0 && i < array.length && j >= 0 && j < array[0].length;\n        });\n        var cellsForRecursion = validCells.filter(function (cell) {\n            i = cell[0];\n            j = cell[1];\n            return array[i][j].open == false && array[i][j].number == 0;\n        });\n        validCells.forEach(function (cell) {\n            i = cell[0];\n            j = cell[1];\n            array[i][j].open = true;\n            array[i][j].flag = false;\n            array[i][j].ask = false;\n        });\n        return cellsForRecursion;\n    };\n\n    $(document).on('contextmenu', '.flagCell, .cell, .askCell', function (event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        var $cell = $(this);\n\n        const setCellClass = n => $cell.attr('class', n);\n\n        var i = $cell.data('i');\n        var j = $cell.data('j');\n\n        switch ($cell.attr('class')) {\n            case 'cell':\n                if (flagCounter >= 1) {\n                    array[i][j].flag = true;\n                    setCellClass('flagCell');\n                    break;\n                } else {\n                    return;\n                }\n            case 'flagCell':\n                array[i][j].flag = false;\n                array[i][j].ask = true;\n                setCellClass('askCell');\n                break;\n            case 'askCell':\n                array[i][j].ask = false;\n                setCellClass('cell');\n                break;\n        };\n        UpdateCounterText();\n    });\n\n    $(document).on('click', '.cell', function (event) {\n        event.stopImmediatePropagation();\n        var $cell = $(this);\n        var i = $cell.data('i');\n        var j = $cell.data('j');\n\n        var closedCells = array.reduce((p, c) => {\n            let numberOfClosedCells = 0;\n            c.forEach(o => o.open ? o : numberOfClosedCells++);\n            return p + numberOfClosedCells;\n        }, 0);\n\n        if (closedCells == mines + 1 && array[i][j].mine == false) {\n            array[i][j].open = true;\n            render();\n            $('.playAgain').toggleClass('userWon');\n            array.forEach(r => r.forEach(cell => cell.open = true));\n        } else if (array[i][j].number != 0) {\n            array[i][j].open = true;\n        } else if (array[i][j].number == 0 && !array[i][j].mine) {\n            array[i][j].open = true;\n            var allCellsToCheck = OpenSurroundingCells(array, i, j);\n            var loopingLength = allCellsToCheck;\n            for (var k = 0; k < loopingLength.length; k++) {\n                i = allCellsToCheck[k][0];\n                j = allCellsToCheck[k][1];\n                var returnedCells = OpenSurroundingCells(array, i, j);\n                if (returnedCells.length > 0) {\n                    for (var l = 0; l < returnedCells.length; l++) {\n                        loopingLength.push(returnedCells[l]);\n                    }\n                }\n            }\n        } else if (array[i][j].mine) {\n            array.forEach(r => r.forEach(cell => cell.open = true));\n            $('.playAgain').toggleClass('userLost');\n        };\n        UpdateCounterText();\n        render();\n    });\n}\n\nfunction SetUpGame() {\n    height = $('#height').val();\n    height = parseInt(height);\n    width = $('#width').val();\n    width = parseInt(width);\n    if (height >= 2 && width >= 2 && height <= 50 && width <= 50) {\n        mines = Math.round(width * height / 8) + 1;\n        $('#size').toggle();\n        $('#game').toggle();\n        StartGame();\n    } else {\n        $('#chooseSize').html('<p style=\"color: red;\">Must be between 2 and 50<p/>');\n        return;\n    }\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })
/******/ ]);